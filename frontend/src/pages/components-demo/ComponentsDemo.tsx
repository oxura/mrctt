import React, { useState } from 'react';
import {
  Button,
  Input,
  Select,
  Checkbox,
  Textarea,
  Card,
  CardHeader,
  CardBody,
  CardFooter,
  Modal,
  ModalHeader,
  ModalBody,
  ModalFooter,
  Dropdown,
  useToast,
  Table,
} from '../../components/ui';
import type { Column, BulkAction, FilterOption } from '../../components/ui';
import styles from './ComponentsDemo.module.css';

interface SampleData {
  id: string;
  name: string;
  email: string;
  status: string;
  role: string;
}

const ComponentsDemo: React.FC = () => {
  const [modalOpen, setModalOpen] = useState(false);
  const [checkboxValue, setCheckboxValue] = useState(false);
  const toast = useToast();

  const sampleData: SampleData[] = [
    { id: '1', name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', email: 'ivan@example.com', status: 'active', role: 'admin' },
    { id: '2', name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', email: 'maria@example.com', status: 'active', role: 'manager' },
    { id: '3', name: '–ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤', email: 'petr@example.com', status: 'inactive', role: 'user' },
    { id: '4', name: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞', email: 'anna@example.com', status: 'active', role: 'user' },
    { id: '5', name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤', email: 'dmitry@example.com', status: 'pending', role: 'user' },
  ];

  const columns: Column<SampleData>[] = [
    { key: 'name', label: '–ò–º—è', sortable: true },
    { key: 'email', label: 'Email', sortable: true },
    { 
      key: 'status', 
      label: '–°—Ç–∞—Ç—É—Å', 
      sortable: true,
      render: (value) => (
        <span className={styles[`status-${value}`]}>{value}</span>
      ),
    },
    { key: 'role', label: '–†–æ–ª—å', sortable: true },
  ];

  const bulkActions: BulkAction[] = [
    {
      label: '–£–¥–∞–ª–∏—Ç—å',
      icon: 'üóëÔ∏è',
      onClick: (ids) => toast.success(`–£–¥–∞–ª–µ–Ω–æ ${ids.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`),
      variant: 'danger',
    },
    {
      label: '–≠–∫—Å–ø–æ—Ä—Ç',
      icon: 'üì•',
      onClick: (ids) => toast.info(`–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${ids.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`),
    },
  ];

  const filters: FilterOption[] = [
    {
      key: 'status',
      label: '–°—Ç–∞—Ç—É—Å',
      options: [
        { value: 'active', label: '–ê–∫—Ç–∏–≤–Ω—ã–π' },
        { value: 'inactive', label: '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π' },
        { value: 'pending', label: '–í –æ–∂–∏–¥–∞–Ω–∏–∏' },
      ],
    },
    {
      key: 'role',
      label: '–†–æ–ª—å',
      options: [
        { value: 'admin', label: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' },
        { value: 'manager', label: '–ú–µ–Ω–µ–¥–∂–µ—Ä' },
        { value: 'user', label: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
      ],
    },
  ];

  return (
    <div className={styles.container}>
      <h1>–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</h1>
      <p className={styles.description}>
        –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è CRM-—Å–∏—Å—Ç–µ–º—ã
      </p>

      {/* Buttons */}
      <Card>
        <CardHeader>
          <h2>–ö–Ω–æ–ø–∫–∏</h2>
        </CardHeader>
        <CardBody>
          <div className={styles.section}>
            <h3>–í–∞—Ä–∏–∞–Ω—Ç—ã</h3>
            <div className={styles.buttonGroup}>
              <Button variant="primary">Primary</Button>
              <Button variant="secondary">Secondary</Button>
              <Button variant="outline">Outline</Button>
              <Button variant="ghost">Ghost</Button>
              <Button variant="danger">Danger</Button>
            </div>
          </div>

          <div className={styles.section}>
            <h3>–†–∞–∑–º–µ—Ä—ã</h3>
            <div className={styles.buttonGroup}>
              <Button size="sm">Small</Button>
              <Button size="md">Medium</Button>
              <Button size="lg">Large</Button>
            </div>
          </div>

          <div className={styles.section}>
            <h3>–° –∏–∫–æ–Ω–∫–∞–º–∏</h3>
            <div className={styles.buttonGroup}>
              <Button leftIcon="‚ûï">–°–æ–∑–¥–∞—Ç—å</Button>
              <Button rightIcon="‚Üí">–î–∞–ª–µ–µ</Button>
              <Button variant="outline" leftIcon="‚¨áÔ∏è" rightIcon="üì•">
                –°–∫–∞—á–∞—Ç—å
              </Button>
            </div>
          </div>

          <div className={styles.section}>
            <h3>–°–æ—Å—Ç–æ—è–Ω–∏—è</h3>
            <div className={styles.buttonGroup}>
              <Button loading>–ó–∞–≥—Ä—É–∑–∫–∞...</Button>
              <Button disabled>–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞</Button>
              <Button fullWidth>–ù–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É</Button>
            </div>
          </div>
        </CardBody>
      </Card>

      {/* Form Controls */}
      <Card>
        <CardHeader>
          <h2>–ü–æ–ª—è —Ñ–æ—Ä–º</h2>
        </CardHeader>
        <CardBody>
          <div className={styles.formGrid}>
            <Input
              label="Email"
              placeholder="example@domain.com"
              type="email"
              helperText="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
            />
            <Input
              label="–ü–∞—Ä–æ–ª—å"
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              type="password"
              error="–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
            />
            <Input
              label="–ü–æ–∏—Å–∫"
              placeholder="–ü–æ–∏—Å–∫..."
              leftIcon="üîç"
            />
            <Input
              label="–° –∏–∫–æ–Ω–∫–∞–º–∏"
              placeholder="–í–∞—à —Ç–µ–∫—Å—Ç"
              leftIcon="üìß"
              rightIcon="‚úì"
            />
            <Select
              label="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É"
              options={[
                { value: '', label: '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é' },
                { value: 'ru', label: '–†–æ—Å—Å–∏—è' },
                { value: 'us', label: '–°–®–ê' },
                { value: 'uk', label: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è' },
              ]}
            />
            <Checkbox
              label="–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏"
              checked={checkboxValue}
              onChange={(e) => setCheckboxValue(e.target.checked)}
            />
            <Textarea
              label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
              helperText="–ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤"
            />
          </div>
        </CardBody>
      </Card>

      {/* Cards */}
      <Card>
        <CardHeader>
          <h2>–ö–∞—Ä—Ç–æ—á–∫–∏</h2>
        </CardHeader>
        <CardBody>
          <div className={styles.cardGrid}>
            <Card variant="default" padding="md">
              <h3>Default Card</h3>
              <p>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–µ–Ω—å—é</p>
            </Card>
            <Card variant="bordered" padding="md" hoverable>
              <h3>Bordered Card</h3>
              <p>–ö–∞—Ä—Ç–æ—á–∫–∞ —Å —Ä–∞–º–∫–æ–π (–Ω–∞–≤–µ–¥–∏—Ç–µ –∫—É—Ä—Å–æ—Ä)</p>
            </Card>
            <Card variant="elevated" padding="lg">
              <h3>Elevated Card</h3>
              <p>–ö–∞—Ä—Ç–æ—á–∫–∞ —Å –±–æ–ª—å—à–æ–π —Ç–µ–Ω—å—é</p>
            </Card>
          </div>
        </CardBody>
      </Card>

      {/* Dropdown */}
      <Card>
        <CardHeader>
          <h2>–í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é</h2>
        </CardHeader>
        <CardBody>
          <div className={styles.dropdownSection}>
            <Dropdown
              trigger={<Button variant="outline">–î–µ–π—Å—Ç–≤–∏—è ‚ñº</Button>}
              items={[
                { label: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', value: 'edit', icon: '‚úèÔ∏è', onClick: () => toast.info('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ') },
                { label: '–£–¥–∞–ª–∏—Ç—å', value: 'delete', icon: 'üóëÔ∏è', onClick: () => toast.error('–£–¥–∞–ª–µ–Ω–æ') },
                { label: '–û—Ç–∫–ª—é—á–µ–Ω–æ', value: 'disabled', disabled: true },
              ]}
            />
          </div>
        </CardBody>
      </Card>

      {/* Modal */}
      <Card>
        <CardHeader>
          <h2>–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</h2>
        </CardHeader>
        <CardBody>
          <Button onClick={() => setModalOpen(true)}>–û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</Button>
          <Modal isOpen={modalOpen} onClose={() => setModalOpen(false)} title="–ü—Ä–∏–º–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞">
            <ModalBody>
              <p>–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.</p>
              <Input label="–ò–º—è" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è" />
              <Textarea label="–û–ø–∏—Å–∞–Ω–∏–µ" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ" />
            </ModalBody>
            <ModalFooter>
              <Button variant="outline" onClick={() => setModalOpen(false)}>
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Button onClick={() => { setModalOpen(false); toast.success('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!'); }}>
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </Button>
            </ModalFooter>
          </Modal>
        </CardBody>
      </Card>

      {/* Toast */}
      <Card>
        <CardHeader>
          <h2>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (Toast)</h2>
        </CardHeader>
        <CardBody>
          <div className={styles.buttonGroup}>
            <Button onClick={() => toast.success('–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')}>
              Success
            </Button>
            <Button onClick={() => toast.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')}>
              Error
            </Button>
            <Button onClick={() => toast.warning('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!')}>
              Warning
            </Button>
            <Button onClick={() => toast.info('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')}>
              Info
            </Button>
          </div>
        </CardBody>
      </Card>

      {/* Table */}
      <Card>
        <CardHeader>
          <h2>–¢–∞–±–ª–∏—Ü–∞</h2>
        </CardHeader>
        <CardBody>
          <Table
            data={sampleData}
            columns={columns}
            keyExtractor={(row) => row.id}
            pageSize={25}
            showSearch
            searchPlaceholder="–ü–æ–∏—Å–∫ –ø–æ —Ç–∞–±–ª–∏—Ü–µ..."
            filters={filters}
            bulkActions={bulkActions}
            onRowClick={(row) => toast.info(`–í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞: ${row.name}`)}
          />
        </CardBody>
      </Card>
    </div>
  );
};

export default ComponentsDemo;
