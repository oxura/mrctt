import React, { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import api from '../../utils/api';
import { useAuthStore } from '../../store/authStore';
import styles from './Auth.module.css';

const Login: React.FC = () => {
  const navigate = useNavigate();
  const setAuth = useAuthStore((state) => state.setAuth);

  const [form, setForm] = useState({
    email: '',
    password: '',
    tenantSlug: '',
  });

  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);

  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = event.target;
    setForm((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (event: React.FormEvent) => {
    event.preventDefault();
    setError(null);
    setLoading(true);

    try {
      const { data } = await api.post('/auth/login', form);
      setAuth(data.data);
      
      const onboardingCompleted = data.data.tenant?.settings?.onboarding?.completed;
      if (!onboardingCompleted) {
        navigate('/onboarding');
      } else {
        navigate('/dashboard');
      }
    } catch (err: any) {
      setError(err.response?.data?.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className={styles.container}>
      <div className={styles.card}>
        <div className={styles.header}>
          <h1>–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</h1>
          <p>–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</p>
        </div>

        <form className={styles.form} onSubmit={handleSubmit}>
          <label>
            Email
            <input
              type="email"
              name="email"
              autoComplete="email"
              value={form.email}
              onChange={handleChange}
              required
            />
          </label>

          <label>
            –ü–∞—Ä–æ–ª—å
            <input
              type="password"
              name="password"
              autoComplete="current-password"
              value={form.password}
              onChange={handleChange}
              required
            />
          </label>

          <label>
            –ê–¥—Ä–µ—Å —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏
            <div className={styles.slugField}>
              <input
                type="text"
                name="tenantSlug"
                placeholder="company"
                value={form.tenantSlug}
                onChange={handleChange}
                required
              />
              <span>.ecosystem.app</span>
            </div>
          </label>

          {error && <div className={styles.error}>{error}</div>}

          <button type="submit" disabled={loading}>
            {loading ? '–í—Ö–æ–¥–∏–º...' : '–í–æ–π—Ç–∏'}
          </button>
        </form>

        <div className={styles.footer}>
          <Link to="/forgot-password">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</Link>
          <span>
            –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <Link to="/register">–°–æ–∑–¥–∞—Ç—å</Link>
          </span>
        </div>
      </div>
      <div className={styles.sidebarInfo}>
        <h2>–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫</h2>
        <p>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è CRM, –∫–æ—Ç–æ—Ä–∞—è –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –≤–∞—à –±–∏–∑–Ω–µ—Å –∑–∞ –ø–∞—Ä—É –º–∏–Ω—É—Ç.</p>
        <ul>
          <li>üåç –ú—É–ª—å—Ç–∏—Ç–µ–Ω–∞–Ω—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</li>
          <li>üîê JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</li>
          <li>üß© –ú–æ–¥—É–ª–∏ –≤–∫–ª—é—á–∞—é—Ç—Å—è/–≤—ã–∫–ª—é—á–∞—é—Ç—Å—è –ø–æ–¥ –Ω–∏—à—É</li>
        </ul>
      </div>
    </div>
  );
};

export default Login;
