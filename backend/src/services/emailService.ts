import nodemailer from 'nodemailer';
import { env } from '../config/env';
import logger from '../utils/logger';

export interface EmailOptions {
  to: string;
  subject: string;
  html: string;
  text?: string;
}

class EmailService {
  private transporter: nodemailer.Transporter | null = null;

  constructor() {
    this.initializeTransporter();
  }

  private initializeTransporter() {
    if (env.NODE_ENV === 'development' && !env.EMAIL_HOST) {
      logger.warn('Email service not configured. Emails will be logged to console only.');
      return;
    }

    if (!env.EMAIL_HOST || !env.EMAIL_PORT || !env.EMAIL_USER || !env.EMAIL_PASSWORD) {
      logger.warn('Email configuration incomplete. Emails will be logged to console only.');
      return;
    }

    try {
      this.transporter = nodemailer.createTransport({
        host: env.EMAIL_HOST,
        port: env.EMAIL_PORT,
        secure: env.EMAIL_SECURE,
        auth: {
          user: env.EMAIL_USER,
          pass: env.EMAIL_PASSWORD,
        },
      });

      this.transporter.verify().catch((error) => {
        logger.warn('Email transporter verification failed', error);
      });

      logger.info('Email service initialized successfully');
    } catch (error) {
      logger.error('Failed to initialize email service:', error);
    }
  }

  async sendEmail(options: EmailOptions): Promise<boolean> {
    try {
      if (!this.transporter) {
        logger.info('Email would be sent (transporter not configured):', {
          to: options.to,
          subject: options.subject,
          preview: options.text?.substring(0, 100) || options.html.substring(0, 100),
        });
        return true;
      }

      const fromAddress = env.EMAIL_FROM_ADDRESS || env.EMAIL_USER || 'no-reply@ecosystem.app';
      const fromName = env.EMAIL_FROM_NAME || '–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫';

      const info = await this.transporter.sendMail({
        from: `${fromName} <${fromAddress}>`,
        to: options.to,
        subject: options.subject,
        text: options.text,
        html: options.html,
      });

      logger.info('Email sent successfully:', {
        to: options.to,
        subject: options.subject,
        messageId: info.messageId,
      });

      return true;
    } catch (error) {
      logger.error('Failed to send email:', {
        to: options.to,
        subject: options.subject,
        error,
      });
      return false;
    }
  }

  async sendPasswordResetEmail(email: string, resetUrl: string, firstName?: string): Promise<boolean> {
    const recipientName = firstName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    const html = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
          .button { display: inline-block; background: #667eea; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
          .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 20px 0; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üåø –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫</h1>
            <p>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</p>
          </div>
          <div class="content">
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${recipientName}!</p>
            <p>–í—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –±—ã–ª –∑–∞–ø—Ä–æ—à–µ–Ω —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.</p>
            <p>–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>
            <div style="text-align: center;">
              <a href="${resetUrl}" class="button">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å</a>
            </div>
            <p>–ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä:</p>
            <p style="word-break: break-all; background: white; padding: 10px; border-radius: 4px;">${resetUrl}</p>
            <div class="warning">
              <strong>‚è±Ô∏è –í–∞–∂–Ω–æ:</strong> –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.
            </div>
            <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ. –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.</p>
            <div class="footer">
              <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫</p>
              <p style="margin-top: 20px;">–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;

    const text = `
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${recipientName}!

–í—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –±—ã–ª –∑–∞–ø—Ä–æ—à–µ–Ω —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ "–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫".

–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Å—Å—ã–ª–∫–µ:
${resetUrl}

–í–∞–∂–Ω–æ: –≠—Ç–∞ —Å—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.

–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ. –í–∞—à –ø–∞—Ä–æ–ª—å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫
    `.trim();

    return this.sendEmail({
      to: email,
      subject: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è - –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫',
      html,
      text,
    });
  }

  async sendWelcomeEmail(email: string, firstName?: string, companyName?: string): Promise<boolean> {
    const recipientName = firstName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    const html = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0; }
          .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 8px 8px; }
          .button { display: inline-block; background: #667eea; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; margin: 20px 0; }
          .feature { background: white; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #667eea; }
          .footer { text-align: center; margin-top: 30px; color: #666; font-size: 12px; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
            <p>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</p>
          </div>
          <div class="content">
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${recipientName}!</p>
            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ <strong>–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫</strong>!</p>
            ${companyName ? `<p>–í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è <strong>${companyName}</strong> –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.</p>` : ''}
            <h3>–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
            <div class="feature">
              <strong>1. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥</strong><br>
              –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–¥—É–ª–∏ —Å–∏—Å—Ç–µ–º—ã
            </div>
            <div class="feature">
              <strong>2. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç/—É—Å–ª—É–≥—É</strong><br>
              –î–æ–±–∞–≤—å—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞–º
            </div>
            <div class="feature">
              <strong>3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è —Å–±–æ—Ä–∞ –ª–∏–¥–æ–≤</strong><br>
              –ü–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –µ—ë –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ
            </div>
            <div class="feature">
              <strong>4. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É</strong><br>
              –î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
            </div>
            <p>–£ –≤–∞—Å –µ—Å—Ç—å 14 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞, —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã.</p>
            <div style="text-align: center;">
              <a href="${env.FRONTEND_URL}/onboarding" class="button">–ù–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É</a>
            </div>
            <div class="footer">
              <p>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!</p>
              <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫</p>
            </div>
          </div>
        </div>
      </body>
      </html>
    `;

    const text = `
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${recipientName}!

–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ "–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫"!

${companyName ? `–í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è ${companyName} –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.` : ''}

–ß—Ç–æ –¥–∞–ª—å—à–µ?

1. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ - –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–¥—É–ª–∏ —Å–∏—Å—Ç–µ–º—ã
2. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç/—É—Å–ª—É–≥—É - –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞–º
3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è —Å–±–æ—Ä–∞ –ª–∏–¥–æ–≤ - –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –µ—ë –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ
4. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É - –¥–æ–±–∞–≤—å—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞

–£ –≤–∞—Å –µ—Å—Ç—å 14 –¥–Ω–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞, —á—Ç–æ–±—ã –æ—Ü–µ–Ω–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã.

–ù–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É: ${env.FRONTEND_URL}/onboarding

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ –≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –∑–∞—è–≤–æ–∫
    `.trim();

    return this.sendEmail({
      to: email,
      subject: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≠–∫–æ—Å–∏—Å—Ç–µ–º—É –∑–∞—è–≤–æ–∫!',
      html,
      text,
    });
  }
}

export const emailService = new EmailService();
